# botkit
spring.jackson.property-naming-strategy=SNAKE_CASE

# slack integrations
rtmUrl=https://slack.com/api/rtm.start?token={token}&simple_latest&no_unreads
retrieveUserUrl=https://slack.com/api/users.info?token={token}&user={userId}
slackBotToken=
slashCommandToken=
slackIncomingWebhookUrl=https://hooks.slack.com/services/T025DUwebhookurloOYvPiHL7y6



# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
#spring.datasource.url = ${JDBC_DATABASE_URL}
#spring.datasource.username = ${JDBC_DATABASE_USERNAME}
#spring.datasource.password = ${JDBC_DATABASE_PASSWORD}

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect